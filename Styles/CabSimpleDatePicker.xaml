<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:wpfControlLibrary="clr-namespace:CAB.CSP.Common.Client.WPFControlLibrary">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="..\ResourceDictionaries\Colors.xaml"/>
		<ResourceDictionary Source="..\ResourceDictionaries\Icons.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
	<Geometry x:Key="UpArrowGeometry">M 0 4 L 3.5 0 L 7 4 Z</Geometry>

	<DataTemplate x:Key="IncreaseGlyphNormalKey">
		<Path
			Width="7"
			Height="4"
			Data="{StaticResource UpArrowGeometry}"
			Fill="{DynamicResource {x:Static themes:ResourceKeys.GlyphNormalForegroundKey}}"
            SnapsToDevicePixels="True"
             HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
	</DataTemplate>

	<DataTemplate x:Key="IncreaseGlyphDisabledKey">
		<Path
			Width="7"
			Height="4"
			Data="{StaticResource UpArrowGeometry}"
			Fill="{DynamicResource {x:Static themes:ResourceKeys.GlyphDisabledForegroundKey}}"
            SnapsToDevicePixels="True"
             HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
	</DataTemplate>

	<DataTemplate x:Key="DecreaseGlyphNormalKey">
		<Path
			Width="7"
			Height="4"
			Data="{StaticResource DownArrowGeometry}"
			Fill="{DynamicResource {x:Static themes:ResourceKeys.GlyphNormalForegroundKey}}"
            SnapsToDevicePixels="True"
             HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
	</DataTemplate>

	<DataTemplate x:Key="DecreaseGlyphDisabledKey">
		<Path
			Width="7"
			Height="4"
			Data="{StaticResource DownArrowGeometry}"
			Fill="{DynamicResource {x:Static themes:ResourceKeys.GlyphDisabledForegroundKey}}"
            SnapsToDevicePixels="True"
             HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" />
	</DataTemplate>

	<!-- =============================================================================== -->
	<!-- ButtonSpinner                                                                   -->
	<!-- =============================================================================== -->

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<Style TargetType="{x:Type xctk:ButtonSpinner}">
		<Style.Resources>
			<Style TargetType="{x:Type RepeatButton}">
				<Setter Property="Background" Value="White"/>
			</Style>
		</Style.Resources>
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
					<Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter Focusable="False" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

							<Grid Grid.Column="1" Visibility="{TemplateBinding ShowButtonSpinner, Converter={StaticResource BooleanToVisibilityConverter}}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<RepeatButton x:Name="PART_IncreaseButton"
                                   IsTabStop="{TemplateBinding IsTabStop}" ContentTemplate="{StaticResource IncreaseGlyphNormalKey}" />

								<RepeatButton x:Name="PART_DecreaseButton"
                                   Grid.Row="1"
                                   IsTabStop="{TemplateBinding IsTabStop}" ContentTemplate="{StaticResource DecreaseGlyphNormalKey}" />

							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}" />
						</Trigger>
						<Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_IncreaseButton" Property="ContentTemplate" Value="{StaticResource IncreaseGlyphDisabledKey}" />
						</Trigger>
						<Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_DecreaseButton" Property="ContentTemplate" Value="{StaticResource DecreaseGlyphDisabledKey}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<xctk:InverseBoolConverter x:Key="InverseBoolConverter" />


	<!--Date Time-->

	<DataTemplate x:Key="DefaultWatermarkTemplate">
		<ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" Margin="0,0,3,0" />
	</DataTemplate>

	<LinearGradientBrush x:Key="PopupDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0" />
		<GradientStop Color="#FF8399A9" Offset="0.375" />
		<GradientStop Color="#FF718597" Offset="0.375" />
		<GradientStop Color="#FF617584" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFffffff" />
				<GradientStop Offset="1" Color="#FFE8EBED" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="DateTimePickerToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid SnapsToDevicePixels="True" Margin="2,0,0,0">
						<ContentPresenter Height="16" Width="16" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{StaticResource Calendar}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- DateTimePicker                                                                  -->
	<!-- =============================================================================== -->

	<Style TargetType="{x:Type wpfControlLibrary:CabSimpleDatePicker}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="TimeWatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
		<Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type wpfControlLibrary:CabSimpleDatePicker}">
					<ControlTemplate.Triggers>
						<Trigger Property="Validation.HasError" Value="true">
							<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
						</Trigger>
					</ControlTemplate.Triggers>
					<Border>
						<Grid Margin="2">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<xctk:ButtonSpinner x:Name="PART_Spinner"
                                             IsTabStop="False"
                                             Background="{TemplateBinding Background}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             AllowSpin="{TemplateBinding AllowSpin}"
                                             ShowButtonSpinner="false">
									<xctk:WatermarkTextBox x:Name="PART_TextBox"
                                                   BorderThickness="0" 
                                                   Background="Transparent"
                                                   FontFamily="{TemplateBinding FontFamily}" 
                                                   FontSize="{TemplateBinding FontSize}" 
                                                   FontStretch="{TemplateBinding FontStretch}"
                                                   FontStyle="{TemplateBinding FontStyle}" 
                                                   FontWeight="{TemplateBinding FontWeight}" 
                                                   Foreground="{TemplateBinding Foreground}" 
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                   MinWidth="20"
                                                   AcceptsReturn="False"
                                                   Padding="0"
                                                   TextAlignment="{TemplateBinding TextAlignment}"
                                                   TextWrapping="NoWrap" 
                                                   Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                   TabIndex="{TemplateBinding TabIndex}"
                                                   Watermark="{TemplateBinding Watermark}"
                                                   WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
								</xctk:ButtonSpinner>
								<ToggleButton x:Name="_calendarToggleButton"                                      
                                      Grid.Column="1"
                                      Padding="0"
                                      Background="White"
                                      Focusable="False"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource DateTimePickerToggleButtonStyle}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" 
                                      Margin="0">
								</ToggleButton>
							</Grid>
							<Popup x:Name="PART_Popup" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False" AllowsTransparency="True">
								<StackPanel>
									<Calendar x:Name="PART_Calendar" />
									<!--<xctk:TimePicker x:Name="PART_TimeUpDown"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                            Format="{TemplateBinding TimeFormat}"
                                            FormatString="{TemplateBinding TimeFormatString}"
                                            Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                            Watermark="{TemplateBinding TimeWatermark}"
                                            WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" />-->
								</StackPanel>
							</Popup>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfControlLibrary="clr-namespace:CAB.CSP.Common.Client.WPFControlLibrary"
                    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\ResourceDictionaries\Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type wpfControlLibrary:CabDecimalUpDown}">
        <Setter Property="Foreground" Value="{StaticResource Text}"/>
        <Setter Property="Background" Value="{StaticResource TextboxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextboxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfControlLibrary:CabDecimalUpDown}">
                    <xctk:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}" 
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}"                                         
                                        IsTabStop="False" 
                                        ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
                        <xctk:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False" 
                                               BorderThickness="0" 
                                               Background="{TemplateBinding Background}" 
                                               ContextMenu="{TemplateBinding ContextMenu}" 
                                               Foreground="{TemplateBinding Foreground}" 
                                               FontWeight="{TemplateBinding FontWeight}" 
                                               FontStyle="{TemplateBinding FontStyle}" 
                                               FontStretch="{TemplateBinding FontStretch}" 
                                               FontSize="{TemplateBinding FontSize}" 
                                               FontFamily="{TemplateBinding FontFamily}" 
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                                               MinWidth="20" Padding="0" 
                                               SelectAllOnGotFocus="{Binding SelectAllOnGotFocus, RelativeSource={RelativeSource TemplatedParent}}" 
                                               TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}" 
                                               TextWrapping="NoWrap" TabIndex="{TemplateBinding TabIndex}" 
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                               WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                               Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </xctk:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource TextboxBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderDisabled}"/>
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderFocus}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition SourceName="PART_TextBox" Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderHover}"/>
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TextReadonly}"/>
                            <Setter Property="Background" Value="{StaticResource TextboxBackgroundReadonly}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderReadonly}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  SourceName="PART_TextBox" Property="IsFocused" Value="True" />
                                <Condition Property="IsReadOnly" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource TextboxBackgroundReadonly}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderReadonlyHover}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource TextboxBackgroundReadonly}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderReadonlyHover}"/>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent, FallbackValue=''}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>